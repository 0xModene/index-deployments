{
    "name": "index-deployments",
    "version": "0.0.1",
    "description": "",
    "main": "dist",
    "types": "dist/types",
    "files": [
      "artifacts",
      "dist",
      "contracts",
      "utils",
      "scripts",
      "typechain",
      "tsconfig.json"
    ],
    "scripts": {
      "build": "yarn compile && yarn transpile-dist",
      "chain": "npx buidler node --no-deploy",
      "clean": "rm -f coverage.json; rm -rf .coverage_cache; rm -rf .coverage_contracts; rm -rf cache; rm -rf coverage; rm -rf typechain; rm -rf artifacts",
      "clean-artifacts": "rm -rf contracts && rm -rf artifacts && rm -rf external",
      "clean-dev-deployment": "rm -rf deployments/50-development.json",
      "compile": "npx buidler compile",
      "copy-contracts": "yarn clean-artifacts && mkdir contracts && cp -rf node_modules/index-coop-contracts/contracts/* ./contracts/. && mkdir artifacts && cp -rf node_modules/index-coop-contracts/artifacts/* ./artifacts/. && mkdir external && cp -rf node_modules/index-coop-contracts/external/* ./external/.",
      "copy-external-abi": "cp -r external/abi/**/* artifacts",
      "coverage": "yarn clean && yarn build && npx buidler coverage --temp artifacts --network coverage",
      "deploy:kovan": "buidler --network kovan deploy",
      "deploy:production": "buidler --network production deploy",
      "deploy:local": "yarn run clean-dev-deployment && buidler --network localhost deploy",
      "fix-typechain": "node scripts/fix-typechain.js && yarn rename-extensions",
      "flatten": "npx waffle flatten",
      "lint": "yarn run lint-sol && yarn run lint-ts",
      "lint-sol": "solhint 'contracts/**/*.sol'",
      "lint-ts": "tslint -c tslint.json -p tsconfig.json --fix",
      "precommit": "lint-staged",
      "prepare": "yarn build",
      "rename-extensions": "for f in typechain/*.d.ts; do mv -- \"$f\" \"${f%.d.ts}.ts\"; done",
      "test": "yarn clean-artifacts && yarn copy-contracts && npx buidler test --network localhost",
      "test:clean": "yarn clean && yarn build && yarn test",
      "transpile": "tsc",
      "transpile-dist": "tsc -p tsconfig.dist.json",
      "typechain": "npx buidler typechain"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/SetProtocol/index-deployments.git"
    },
    "author": "felix2feng",
    "license": "MIT",
    "homepage": "https://github.com/SetProtocol",
    "devDependencies": {
      "@openzeppelin/contracts": "^3.1.0",
      "@typechain/ethers-v4": "^1.0.0",
      "@typechain/truffle-v4": "^2.0.2",
      "@typechain/truffle-v5": "^2.0.2",
      "@typechain/web3-v1": "^1.0.0",
      "@types/chai": "^4.2.11",
      "@types/fs-extra": "^5.0.0",
      "@types/lodash": "^4.14.86",
      "@types/mocha": "^7.0.2",
      "@types/node": "^14.0.5",
      "buidler-deploy": "^0.5.14",
      "chai": "^4.2.0",
      "coveralls": "^3.0.1",
      "dotenv": "^8.2.0",
      "ethereum-waffle": "^2.5.1",
      "ethers": "^4.0.47",
      "husky": "^4.2.5",
      "lint-staged": "^10.2.11",
      "lodash": "^4.17.4",
      "solc": "^0.6.10",
      "solhint": "^3.1.0",
      "solidity-coverage": "^0.7.5",
      "ts-generator": "0.0.8",
      "ts-node": "^8.10.1",
      "tslint": "^5.8.0",
      "tslint-eslint-rules": "^5.3.1",
      "typescript": "^3.9.3",
      "web3": "^1.2.9"
    },
    "dependencies": {
      "@nomiclabs/buidler": "^1.3.4",
      "@nomiclabs/buidler-ethers": "^1.3.3",
      "@nomiclabs/buidler-waffle": "^1.3.3",
      "buidler-typechain": "0.1.1",
      "ethereumjs-util": "^7.0.5",
      "fs-extra": "^5.0.0",
      "index-coop-contracts": "0.0.1",
      "module-alias": "^2.2.2",
      "replace-in-file": "^6.1.0",
      "typechain": "^2.0.0"
    },
    "_moduleAliases": {
      "@utils": "utils",
      "@typechain": "typechain"
    },
    "husky": {
      "hooks": {
        "pre-commit": "yarn precommit"
      }
    },
    "lint-staged": {
      "contracts/**/*.sol": [
        "yarn lint-sol --fix"
      ],
      "test/**/*.ts": [
        "yarn lint-ts --fix"
      ],
      "utils/**/*.ts": [
        "yarn lint-ts --fix"
      ]
    }
  }